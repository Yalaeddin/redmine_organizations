<% groups = GroupNonMember.all %>
<% @givable_roles ||= Role.givable.sorted %>

<% groups.each do |group| %>
  <% group_roles = Role.joins(:member_roles => :member).where("user_id = ? AND project_id = ?", group.id, @project.id).sorted.uniq %>
  <tr id="group-<%= group.id %>" class="even">
    <td class="group"><%= link_to_user group %></td>
    <td id="all_roles">
      <div class='role' style="float: left;">
        <span id="group-<%= group.id %>-roles">
          <% if group_roles.any? %>
            <%= group_roles.map(&:name).join(", ") %>
          <% else %>
            <span class="undefined"><%= l('undefined') %></span>
          <% end %>
        </span>
      </div>
      <%= form_for(group, :as => :membership, :remote => true, :method => :put,
                   :url => update_group_non_member_roles_organizations_memberships_path(:project_id => @project.id, :group_id => group.id),
                   :html => { :id => "group-#{group.id}-roles-form", :class => 'hol' }) do |f| -%>
        <div class='roles_checkboxes' style="float: left;">
          <p><% @givable_roles.each do |role| %>
              <label><%= check_box_tag 'membership[role_ids][]',
                                       role.id,
                                       group_roles.include?(role),
                                       :id => nil,
                                       :disabled => !User.current.managed_roles(@project).include?(role) %> <%=h role %></label><br />
            <% end %></p>
          <%= hidden_field_tag 'membership[role_ids][]', '' %>
          <p><%= submit_tag l(:button_save), :class => "small" %>
            <%= link_to_function l(:button_cancel), "toggleOrgaForms(#{group.id}, 'group'); return false;" %></p>
        </div>
      <% end -%>
    </td>
    <td class="buttons">
      <%= link_to_function(l(:button_edit), "toggleOrgaForms(#{group.id}, 'group'); return false;",
                           :class => 'icon icon-edit') %>
    </td>
  </tr>

  <tr id="non_member_orga_exception_select">
    <td colspan="3">
      <%= form_for :membership, :url => create_non_members_roles_organizations_memberships_path(:project_id => @project),
                   :remote => true, :html => {:id => 'organization-form'} do |f| -%>
          <%= f.select "organization_id", nested_set_options(Organization) { |i| i.fullname },
                       { :disabled => @project.organizations.map(&:id), :include_blank => true,
                         :label => :field_parent_organization },
                       { :class => "orga-select2" } %>
          <%= submit_tag l(:button_add_exception) %>
      <% end %>
    </td>
  </tr>

  <% Organization.joins(:organization_roles).where("project_id = ? AND non_member_role = ?", @project.id, true).uniq.each do |orga| %>
     <%= render :partial => 'projects/settings/non_member_organization', :locals => {:o => orga} %>
  <% end %>

<% end %>
